services:
  dagster_db:
    image: postgres:12
    container_name: dagster_db
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    networks:
      - web
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  dagster:
    build:
      context: .
      dockerfile: ./Dockerfile.core
    entrypoint:
      - dagster-daemon
      - run
    container_name: dagster
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - web
    depends_on:
      - dagster_db
      - dagster_etls

  dagster_etls:
    build:
      context: .
      dockerfile: ./Dockerfile.etls
    container_name: dagster_etls
    image: dagster_etls_image
    restart: always
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_CURRENT_IMAGE: "dagster_etls_image"
    env_file:
      - .env.docker
    volumes:
      - ./tmp/data:/tmp/data
    networks:
      - web

  dagster_web:
    build:
      context: .
      dockerfile: ./Dockerfile.core
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "6543"
      - -w
      - workspace.yaml
    container_name: dagster_web
    expose:
      - "6543"
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - web
    depends_on:
      - dagster_db
      - dagster_etls

  nginx:
    image: nginx:alpine
    container_name: nginx_dagster
    ports:
      - "6543:6543"
    depends_on:
      - dagster_web
    volumes:
      - ./../nginx/web.dagster.conf:/etc/nginx/conf.d/web.dagster.conf
      - ./../nginx/.htpasswd:/etc/nginx/.htpasswd
    networks:
      - web

networks:
  web:
    external: true
